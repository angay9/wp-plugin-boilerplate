{
    "sourceFile": "helpers/functions.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1640286842622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1640286870823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n <?php\n \n-\n-if (! function_exists('aa_render')) {\n-    function aa_render($view, array $args = []) {\n+if (! function_exists('pb_render')) {\n+    function pb_render($view, array $args = []) {\n         ob_start();\n         extract($args);       \n         \n         $templatePath = 'aclauroautomarket-app/' . $view;\n@@ -14,9 +13,9 @@\n \n             return ob_get_clean();\n         }\n \n-        $file_path = aa_get_view_path($view);\n+        $file_path = pb_get_view_path($view);\n \n         if (! $file_path) {\n             return '';\n         }\n@@ -25,8 +24,9 @@\n \n         return ob_get_clean();\n     }\n }\n+\n if (! function_exists('pb_get_view_path')) {\n     function pb_get_view_path($view) {\n         $file_path = __DIR__ . '/../views/' . ltrim($view, '/');\n  \n"
                },
                {
                    "date": 1640286878659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n     function pb_render($view, array $args = []) {\n         ob_start();\n         extract($args);       \n         \n-        $templatePath = 'aclauroautomarket-app/' . $view;\n+        $templatePath = 'plugin-boilerplate/' . $view;\n         $template = locate_template($templatePath);\n \n         if ($template) {\n             require $template;\n"
                }
            ],
            "date": 1640286842622,
            "name": "Commit-0",
            "content": "<?php\n\n\nif (! function_exists('aa_render')) {\n    function aa_render($view, array $args = []) {\n        ob_start();\n        extract($args);       \n        \n        $templatePath = 'aclauroautomarket-app/' . $view;\n        $template = locate_template($templatePath);\n\n        if ($template) {\n            require $template;\n\n            return ob_get_clean();\n        }\n\n        $file_path = aa_get_view_path($view);\n\n        if (! $file_path) {\n            return '';\n        }\n\n        require $file_path;\n\n        return ob_get_clean();\n    }\n}\nif (! function_exists('pb_get_view_path')) {\n    function pb_get_view_path($view) {\n        $file_path = __DIR__ . '/../views/' . ltrim($view, '/');\n \n        if (! file_exists($file_path)) {\n            return '';\n        }\n\n        return $file_path;\n    }\n}\n\n\nif (! function_exists('pb_array_get')) {\n    /**\n     * Get an item from an array using \"dot\" notation.\n     *\n     * @param  array $array\n     * @param  string $key\n     * @param  mixed $default\n     * @return mixed\n     */\n    function pb_array_get($array, $key, $default = null)\n    {\n        if (is_null($key)) {\n            return $array;\n        }\n\n        if (isset($array[$key])) {\n            return $array[$key];\n        }\n\n        foreach (explode('.', $key) as $segment) {\n            if (!is_array($array) || !array_key_exists($segment, $array)) {\n                return $default;\n            }\n\n            $array = $array[$segment];\n        }\n\n        return $array;\n    }\n}\n\nif (! function_exists('pb_config')) {\n    function pb_config($key, $default = null) {\n        $config_path = __DIR__ . '/../config/config.php';\n        $theme_config_path = get_stylesheet_directory() . '/plugin-boilerplate/config/config.php';\n\n        $config = require $config_path;\n        $theme_config = [];\n\n        if (file_exists($theme_config_path)) {\n            $theme_config = require $theme_config_path; \n        }\n\n        $config = array_merge($config, $theme_config);\n\n        return pb_array_get($config, $key, $default);\n    }\n}\n\nif (! function_exists('pb_log')) {\n    function pb_log($data, $append = true, $filename = 'logs.txt') {\n        $file = __DIR__ . '/../' . $filename;\n\n        file_put_contents($file, current_time('Y-m-d H:i:s') . ': ' . json_encode($data) . \"\\n\", $append ? FILE_APPEND : 0);\n    }\n}\n\nif (! function_exists('pb_array_first')) {\n    /**\n     * Return the first element in an array passing a given truth test.\n     *\n     * @param  array $array\n     * @param  \\Closure $callback\n     * @param  mixed $default\n     * @return mixed\n     */\n    function pb_array_first($array, $callback, $default = null)\n    {\n        foreach ($array as $key => $value) {\n            if (call_user_func($callback, $key, $value)) {\n                return $value;\n            }\n        }\n\n        return $default;\n    }\n}\n\nif (! function_exists('pb_user_has_role')) {\n    function pb_user_has_role($roles, $user = null) {\n        if (! $user && ! is_user_logged_in()) {\n            return false;\n        }\n\n        if (! $user) {\n            $user = wp_get_current_user();\n        }\n\n        $has_role = false;\n        $roles = (array) $roles;\n        \n        foreach($roles as $role) {\n            if (in_array($role, (array)$user->roles)) {\n                $has_role = true;\n                break;\n            }\n        }\n\n        return $has_role;\n    }\n}\n\nif (! function_exists('pb_get_user_ip')) {\n    function pb_get_user_ip() {\n        $ip_addr = null;\n\n        foreach (array('HTTP_CLIENT_IP', 'HTTP_X_FORWARDED_FOR', 'HTTP_X_FORWARDED', 'HTTP_X_CLUSTER_CLIENT_IP', 'HTTP_FORWARDED_FOR', 'HTTP_FORWARDED', 'REMOTE_ADDR') as $key)\n        {\n            if (array_key_exists($key, $_SERVER) === true)\n            {\n                foreach (array_map('trim', explode(',', $_SERVER[$key])) as $ip)\n                {\n                    if (filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE) !== false)\n                    {\n                        return $ip;\n                    }\n                }\n            }\n        }\n\n        return $ip_addr;\n    }\n}"
        }
    ]
}